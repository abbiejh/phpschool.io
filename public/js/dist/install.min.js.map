{"version":3,"sources":["public/js/node_modules/browser-pack/_prelude.js","public/js/node_modules/deepmerge/index.js","public/js/install.js","public/js/public/js/install.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","root","factory","define","amd","_typeof","deepmerge","this","isMergeableObject","val","nonNullObject","Object","prototype","toString","emptyTarget","Array","isArray","cloneIfNecessary","value","optionsArgument","clone","defaultArrayMerge","target","source","destination","slice","forEach","indexOf","push","mergeObject","keys","key","array","options","arrayMerge","all","reduce","prev","next","2","merge","Instructor","path","container","_classCallCheck","$","firstQuestion","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","answers","Symbol","iterator","done","err","return","currentPath","type","_createClass","html","instructor","renderNext","node","charAt","toUpperCase","nextNode","hasOwnProperty","id","question","answer","append","element","appendTo","show","Path","initialQuestion","createQuestion","window","btoa","tunnel","obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","answerKey","lastStep","getLastStep","osQuestion","dockerQuestion","distroQuestion","windowsPath","addGuide","getPath","macDockerPath","addQuestion","macNativePath","linuxDockerPath","linuxDebianPath","linuxCentOsPath","console","log","render","on","preventDefault"],"mappings":"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","file":"install.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object'\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice()\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument)\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument)\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument))\n        }\n    })\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {}\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument)\n        })\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument)\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument)\n        }\n    })\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge }\n    var arrayMerge = options.arrayMerge || defaultArrayMerge\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n}\n\nreturn deepmerge\n\n}));\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object'\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice()\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument)\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument)\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument))\n        }\n    })\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {}\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument)\n        })\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument)\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument)\n        }\n    })\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge }\n    var arrayMerge = options.arrayMerge || defaultArrayMerge\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n}\n\nreturn deepmerge\n\n}));\n\n},{}],2:[function(require,module,exports){\nlet merge = require('deepmerge');\n\nclass Instructor {\n    constructor(path, container) {\n        this.path = path;\n        this.container = $(container);\n\n        let firstQuestion = path.next;\n\n        for (let key of Object.keys(firstQuestion.answers)) {\n            firstQuestion.answers[key] = {};\n        }\n\n        this.currentPath  = {\n            \"type\": \"question\",\n            \"next\": firstQuestion\n        };\n    }\n\n    render() {\n        let container = this.container;\n\n        container.html('');\n        let instructor = this;\n\n        let renderNext = function (node) {\n            let type     = node.type.charAt(0).toUpperCase() + node.type.slice(1);\n            let nextNode = instructor['render'+type](node);\n\n            if (nextNode.hasOwnProperty('next')) {\n                renderNext(nextNode);\n            }\n        };\n\n        renderNext(this.currentPath);\n\n        return this;\n    }\n\n    renderQuestion(node) {\n        let next = {};\n        let html = `<div id=\"${node.id}\" class=\"question\"><p>${node.next.question}</p>`;\n\n        Object.keys(node.next.answers).forEach(function (answer) {\n            html += `<button class=\"answer\" data-value=\"${answer}\">${answer}</button>`;\n        });\n\n        html += '</div>';\n\n        this.container.append(html);\n\n        if (node.hasOwnProperty('answers')) {\n            next = node.answers[Object.keys(node.answers)[0]];\n        }\n\n        return next;\n    }\n\n    renderGuide(node) {\n        node.next.element.clone().appendTo(this.container).show();\n\n        return {};\n    }\n}\n\nclass Path {\n    constructor(initialQuestion) {\n        this.path = this.createQuestion(initialQuestion);\n    }\n\n    createQuestion(question) {\n        return {\n            \"id\": window.btoa(question),\n            \"type\": \"question\",\n            \"next\": {\n                \"question\": question\n            }\n        };\n    }\n\n    /**\n     * @returns {Object} Last object of the path\n     */\n    getLastStep() {\n        let tunnel = function (obj) {\n            for(let key of Object.keys(obj)) {\n                if (key === 'answers') {\n                    let answer = '';\n                    for (let answerKey of Object.keys(obj[key])) {\n                         answer = answerKey;\n                    }\n\n                    return tunnel(obj[key][answer])\n                }\n\n                if (key === 'next') {\n                    return tunnel(obj[key]);\n                }\n            }\n\n            return obj;\n        };\n\n        return tunnel(this.path);\n    }\n\n    /**\n     * @param {string} answer\n     * @param {string} question\n     * @returns {Path}\n     */\n    addQuestion(answer, question) {\n        let lastStep = this.getLastStep();\n\n        lastStep['answers'] = {};\n        lastStep['answers'][answer] = this.createQuestion(question);\n\n        return this;\n    }\n\n    /**\n     * @param {string} answer\n     * @param {string} element\n     * @returns {Path}\n     */\n    addGuide(answer, element) {\n        let lastStep = this.getLastStep();\n\n        lastStep['answers'] = {};\n        lastStep['answers'][answer] = {\n            \"type\": \"guide\",\n            \"next\": {\n                \"element\": $(element)\n            }\n        };\n\n        return this;\n    }\n\n    /**\n     * @returns {Object} Constructed path object\n     */\n    getPath() {\n        return this.path;\n    }\n}\n\n$(function (){\n    let osQuestion     = 'What operating system do you use?';\n    let dockerQuestion = 'Would you like to use Docker (self contained installation) ?';\n    let distroQuestion = 'What Linux distribution are you using ?';\n\n    let windowsPath = new Path(osQuestion)\n        .addGuide('Windows', '#windowsGuide')\n        .getPath();\n    let macDockerPath = new Path(osQuestion)\n        .addQuestion('Mac Os', dockerQuestion)\n        .addGuide('Yes', '#macDocker')\n        .getPath();\n    let macNativePath = new Path(osQuestion)\n        .addQuestion('Mac Os', dockerQuestion)\n        .addGuide('No', '#macNative')\n        .getPath();\n    let linuxDockerPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addGuide('Yes', '#linuxDocker')\n        .getPath();\n    let linuxDebianPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addQuestion('No', distroQuestion)\n        .addGuide('Debian', '#linuxDebian')\n        .getPath();\n    let linuxCentOsPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addQuestion('No', distroQuestion)\n        .addGuide('CentOS', '#linuxCentOS')\n        .getPath();\n\n    console.log(merge.all([\n        windowsPath, macDockerPath, macNativePath, linuxDockerPath, linuxDebianPath, linuxCentOsPath\n    ]));\n\n    let path = merge.all([\n        windowsPath, macDockerPath, macNativePath, linuxDockerPath, linuxDebianPath, linuxCentOsPath\n    ]);\n\n    console.log(path);\n\n    let instructor = new Instructor(path, '.installer-questions');\n\n    instructor.render();\n\n    $('button.answer', '.installer-questions').on('click', function (e) {\n        e.preventDefault();\n\n        console.log($(this));\n\n        // TODO: Update state...\n    });\n});\n},{\"deepmerge\":1}]},{},[2])\n\n","let merge = require('deepmerge');\n\nclass Instructor {\n    constructor(path, container) {\n        this.path = path;\n        this.container = $(container);\n\n        let firstQuestion = path.next;\n\n        for (let key of Object.keys(firstQuestion.answers)) {\n            firstQuestion.answers[key] = {};\n        }\n\n        this.currentPath  = {\n            \"type\": \"question\",\n            \"next\": firstQuestion\n        };\n    }\n\n    render() {\n        let container = this.container;\n\n        container.html('');\n        let instructor = this;\n\n        let renderNext = function (node) {\n            let type     = node.type.charAt(0).toUpperCase() + node.type.slice(1);\n            let nextNode = instructor['render'+type](node);\n\n            if (nextNode.hasOwnProperty('next')) {\n                renderNext(nextNode);\n            }\n        };\n\n        renderNext(this.currentPath);\n\n        return this;\n    }\n\n    renderQuestion(node) {\n        let next = {};\n        let html = `<div id=\"${node.id}\" class=\"question\"><p>${node.next.question}</p>`;\n\n        Object.keys(node.next.answers).forEach(function (answer) {\n            html += `<button class=\"answer\" data-value=\"${answer}\">${answer}</button>`;\n        });\n\n        html += '</div>';\n\n        this.container.append(html);\n\n        if (node.hasOwnProperty('answers')) {\n            next = node.answers[Object.keys(node.answers)[0]];\n        }\n\n        return next;\n    }\n\n    renderGuide(node) {\n        node.next.element.clone().appendTo(this.container).show();\n\n        return {};\n    }\n}\n\nclass Path {\n    constructor(initialQuestion) {\n        this.path = this.createQuestion(initialQuestion);\n    }\n\n    createQuestion(question) {\n        return {\n            \"id\": window.btoa(question),\n            \"type\": \"question\",\n            \"next\": {\n                \"question\": question\n            }\n        };\n    }\n\n    /**\n     * @returns {Object} Last object of the path\n     */\n    getLastStep() {\n        let tunnel = function (obj) {\n            for(let key of Object.keys(obj)) {\n                if (key === 'answers') {\n                    let answer = '';\n                    for (let answerKey of Object.keys(obj[key])) {\n                         answer = answerKey;\n                    }\n\n                    return tunnel(obj[key][answer])\n                }\n\n                if (key === 'next') {\n                    return tunnel(obj[key]);\n                }\n            }\n\n            return obj;\n        };\n\n        return tunnel(this.path);\n    }\n\n    /**\n     * @param {string} answer\n     * @param {string} question\n     * @returns {Path}\n     */\n    addQuestion(answer, question) {\n        let lastStep = this.getLastStep();\n\n        lastStep['answers'] = {};\n        lastStep['answers'][answer] = this.createQuestion(question);\n\n        return this;\n    }\n\n    /**\n     * @param {string} answer\n     * @param {string} element\n     * @returns {Path}\n     */\n    addGuide(answer, element) {\n        let lastStep = this.getLastStep();\n\n        lastStep['answers'] = {};\n        lastStep['answers'][answer] = {\n            \"type\": \"guide\",\n            \"next\": {\n                \"element\": $(element)\n            }\n        };\n\n        return this;\n    }\n\n    /**\n     * @returns {Object} Constructed path object\n     */\n    getPath() {\n        return this.path;\n    }\n}\n\n$(function (){\n    let osQuestion     = 'What operating system do you use?';\n    let dockerQuestion = 'Would you like to use Docker (self contained installation) ?';\n    let distroQuestion = 'What Linux distribution are you using ?';\n\n    let windowsPath = new Path(osQuestion)\n        .addGuide('Windows', '#windowsGuide')\n        .getPath();\n    let macDockerPath = new Path(osQuestion)\n        .addQuestion('Mac Os', dockerQuestion)\n        .addGuide('Yes', '#macDocker')\n        .getPath();\n    let macNativePath = new Path(osQuestion)\n        .addQuestion('Mac Os', dockerQuestion)\n        .addGuide('No', '#macNative')\n        .getPath();\n    let linuxDockerPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addGuide('Yes', '#linuxDocker')\n        .getPath();\n    let linuxDebianPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addQuestion('No', distroQuestion)\n        .addGuide('Debian', '#linuxDebian')\n        .getPath();\n    let linuxCentOsPath = new Path(osQuestion)\n        .addQuestion('Linux', dockerQuestion)\n        .addQuestion('No', distroQuestion)\n        .addGuide('CentOS', '#linuxCentOS')\n        .getPath();\n\n    console.log(merge.all([\n        windowsPath, macDockerPath, macNativePath, linuxDockerPath, linuxDebianPath, linuxCentOsPath\n    ]));\n\n    let path = merge.all([\n        windowsPath, macDockerPath, macNativePath, linuxDockerPath, linuxDebianPath, linuxCentOsPath\n    ]);\n\n    console.log(path);\n\n    let instructor = new Instructor(path, '.installer-questions');\n\n    instructor.render();\n\n    $('button.answer', '.installer-questions').on('click', function (e) {\n        e.preventDefault();\n\n        console.log($(this));\n\n        // TODO: Update state...\n    });\n});"],"sourceRoot":"/source/"}